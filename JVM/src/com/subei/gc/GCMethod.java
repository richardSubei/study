package com.subei.gc;

// 标记清除算法 将标记为可回收的对象直接清除，会产生大量内存碎片

// 复制算法 将内存区域分为两部分，对象在一部分中分配，回收时将存活的对象移动到另一部分，
// 然后将该部分直接清空，效率高，实现简单，但是内存利用率太低
// 年轻代中采用此算法，eden和surivor为8:1的比例，对象首先在eden和s0区域中分配，回收时，
// 将存活的对象移动至S1，清空eden和S0，若S1空间不够，则对象通过分配担保机制进入老年代
// 因为年轻代中的对象都是朝生夕死的，采用此种方法，简单效率高

// 标记整理算法 将可回收的对象移动到内存中的一端，将边界外的区域清除
public class GCMethod {

}
