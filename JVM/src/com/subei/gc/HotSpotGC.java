package com.subei.gc;

// 枚举根节点 
// HotSpot使用OopMap保存对象中的引用，gc扫描时可由OomMap直接得到GC-ROOTS
// 在类加载完成的时候，虚拟机就将对象内什么偏移量上是什么类型的数据计算出来，
// 在jit编译过程中，也会在特定位置记录下来栈和寄存器中哪些是引用

// 安全点
// 在程序运行过程中，对象之间的引用关系也是一直变化的，虚拟机如果为每条指定都生成对应的OomMap，
// 那将会非常耗费空间。上边写到在"特定位置"记录引用，这些位置就是安全点，当程序运行到安全点时，
// 执行线程应该中断（stop the world），中断方式分为抢先式中断和主动式中断
// 抢先式中断是在GC发生时，将所有线程挂起，如果挂起时线程不在安全点，则将线程恢复，运行到安全点时
// 再将线程挂起。
// 主动式中断是采用标志位的方式，各个线程主动地去轮询这个标志位，如果中断标志位真时就自己主动挂起
// 轮询标志位的地方和安全点是重合的，再加上创建对象需要分配内存的地方


// 安全区域
// 可以看做是安全点的扩展，在这个区域内引用关系不会发生变化 

public class HotSpotGC {

}
